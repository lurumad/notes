{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [ "Standard_LRS", "Standard_GRS", "Standard_RAGRS" ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "F1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and instance size. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "skuCapacity": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "maxValue": 3,
      "metadata": {
        "description": "Describes plan's instance count"
      }
    },
    "sqlAdministratorLogin": {
      "type": "string",
      "metadata": {
        "description": "The admin user of the SQL Server"
      }
    },
    "sqlAdministratorLoginPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password of the admin user of the SQL Server"
      }
    }
  },
  "variables": {
    "hostingPlanName": "[concat('hostingplan-', uniqueString(resourceGroup().id))]",
    "dynamicHostingPlanName": "[concat('dynamichostingplan-', uniqueString(resourceGroup().id))]",
    "apiSiteName": "[concat('backend-', uniqueString(resourceGroup().id))]",
    "webSiteName": "[concat('frontend-', uniqueString(resourceGroup().id))]",
    "sqlserverName": "[concat('sqlserver-', uniqueString(resourceGroup().id))]",
    "sqlserverNameSecret": "[concat(variables('keyVaultName'), '/', 'SqlServer')]",
    "sqlserverNameSecretResourceId": "[resourceId(resourceGroup().name, 'Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), split(variables('sqlserverNameSecret'), '/')[1])]",
    "storageName": "[concat('storage', uniqueString(resourceGroup().id))]",
    "storageNameId": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageName'))]",
    "storageNameSecret": "[concat(variables('keyVaultName'), '/', 'StorageAccountName')]",
    "storageNameSecretResourceId": "[resourceId(resourceGroup().name, 'Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), split(variables('storageNameSecret'), '/')[1])]",
    "databaseName": "notes",
    "keyVaultName": "[concat('keyvault-', uniqueString(resourceGroup().id))]",
    "apiSiteNameId": "[concat(resourceId('Microsoft.Web/sites', variables('apiSiteName')),'/providers/Microsoft.ManagedIdentity/Identities/default')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageName')]",
      "apiVersion": "2018-02-01",
      "location": "[resourceGroup().location]",
      "kind": "StorageV2",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "tags": {
        "displayName": "Storage"
      },
      "resources": [

      ]
    },
    {
      "name": "[variables('sqlserverName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "SqlServer"
      },
      "apiVersion": "2018-06-01-preview",
      "properties": {
        "administratorLogin": "[parameters('sqlAdministratorLogin')]",
        "administratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]",
        "version": "12.0"
      },
      "resources": [
        {
          "name": "[variables('databaseName')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "tags": {
            "displayName": "Database"
          },
          "apiVersion": "2018-06-01-preview",
          "dependsOn": [
            "[variables('sqlserverName')]"
          ],
          "properties": {
            "edition": "Basic",
            "collation": "SQL_Latin1_General_CP1_CI_AS",
            "maxSizeBytes": "1073741824",
            "requestedServiceObjectiveName": "Basic"
          }
        },
        {
          "type": "firewallrules",
          "apiVersion": "2018-06-01-preview",
          "dependsOn": [
            "[variables('sqlserverName')]"
          ],
          "location": "[resourceGroup().location]",
          "name": "AllowAllWindowsAzureIps",
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          }
        }
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[variables('dynamicHostingPlanName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "properties": {
        "name": "[variables('dynamicHostingPlanName')]",
        "computeMode": "Dynamic"
      },
      "tags": {
        "displayName": "DynamicHostingPlan"
      }
    },
    {
      "apiVersion": "2018-02-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('apiSiteName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('dynamicHostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
      ],
      "tags": {
        "displayName": "Functions"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('dynamicHostingPlanName'))]"
      },
      "resources": [
        {
          "apiVersion": "2018-02-01",
          "type": "config",
          "name": "appsettings",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('apiSiteName'))]",
            "[resourceId('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
            "[variables('storageNameSecretResourceId')]",
            "[variables('sqlserverNameSecretResourceId')]"
          ],
          "properties": {
            "WEBSITE_ENABLE_SYNC_UPDATE_SITE": "true",
            "FUNCTIONS_EXTENSION_VERSION": "~3",
            "AzureWebJobsStorage": "[concat('@Microsoft.KeyVault(SecretUri=', reference(variables('storageNameSecretResourceId'),'2015-06-01').secretUriWithVersion, ')')]",
            "AzureWebJobsDashboard": "[concat('@Microsoft.KeyVault(SecretUri=', reference(variables('storageNameSecretResourceId'),'2015-06-01').secretUriWithVersion, ')')]",
            "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageName'), ';AccountKey=', listKeys(variables('storageNameId'),'2015-05-01-preview').key1, ';EndpointSuffix=core.windows.net')]",
            "WEBSITE_CONTENTSHARE": "[tolower(variables('apiSiteName'))]",
            "FUNCTIONS_WORKER_RUNTIME": "dotnet",
            "ConnectionStrings_SqlServer": "[concat('@Microsoft.KeyVault(SecretUri=', reference(variables('sqlserverNameSecretResourceId'),'2015-06-01').secretUriWithVersion, ')')]",
            "JwtSettings_Authority": "https://demo.identityserver.io",
            "JwtSettings_Audience": "api",
            "Host_cors": "*"
          }
        }
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[variables('keyVaultName')]",
      "apiVersion": "2018-02-14",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites/', variables('apiSiteName'))]"
      ],
      "tags": {
        "displayName": "KeyVault"
      },
      "properties": {
        "enabledForDeployment": "true",
        "enabledForDiskEncryption": "false",
        "enabledForTemplateDeployment": "true",
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [
          {
            "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('apiSiteName')), '2018-11-01', 'Full').identity.principalId]",
            "tenantId": "[reference(resourceId('Microsoft.Web/sites', variables('apiSiteName')), '2018-11-01', 'Full').identity.tenantId]",
            "permissions": {
              "keys": [ "Get", "List" ],
              "secrets": [ "Get", "List" ]
            }
          }
        ],
        "sku": {
          "name": "Standard",
          "family": "A"
        },
        "networkAcls": {
          "value": {
            "defaultAction": "Allow",
            "bypass": "AzureServices"
          }
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[variables('storageNameSecret')]",
      "tags": {
        "displayName": "StorageAccountSecret"
      },
      "location": "[resourceGroup().location]",
      "apiVersion": "2018-02-14",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
      ],
      "properties": {
        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageName'), ';AccountKey=', listKeys(variables('storageNameId'),'2015-05-01-preview').key1, ';EndpointSuffix=core.windows.net')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[variables('sqlserverNameSecret')]",
      "tags": {
        "displayName": "SqlServerSecret"
      },
      "apiVersion": "2018-02-14",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.Sql/servers/',variables('sqlserverName'))]"
      ],
      "properties": {
        "value": "[concat('Data Source=tcp:', reference(resourceId('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('databaseName'), ';User Id=', parameters('sqlAdministratorLogin'),';Password=', parameters('sqlAdministratorLoginPassword'), ';Connection Timeout=180;Application Name=', variables('apiSiteName'), ';')]"
      }
    }
  ],
  "outputs": {}
}
